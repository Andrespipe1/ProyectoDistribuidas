services:
  # Base de datos MySQL (MASTER)
  db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: inventario
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql-init/01-master-init.sql:/docker-entrypoint-initdb.d/01-master-init.sql
    command: >
      --server-id=1
      --log-bin=mysql-bin
      --binlog-format=ROW
      --skip-host-cache
      --skip-name-resolve
      --max-connections=50
      --innodb-buffer-pool-size=64M
      --innodb-log-file-size=16M
      --innodb-flush-log-at-trx-commit=2
    restart: always

  # Base de datos MySQL (SLAVE/REPLICA)
  db-slave:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: inventario
    ports:
      - "3307:3306"
    volumes:
      - db_slave_data:/var/lib/mysql
      - ./mysql-init/02-slave-init.sql:/docker-entrypoint-initdb.d/02-slave-init.sql
    command: >
      --server-id=2
      --relay-log=mysql-relay-bin
      --log-slave-updates=1
      --read-only=1
      --skip-host-cache
      --skip-name-resolve
      --max-connections=50
      --innodb-buffer-pool-size=64M
      --innodb-log-file-size=16M
      --innodb-flush-log-at-trx-commit=2
      --skip-innodb-doublewrite
      --skip-host-cache
      --skip-name-resolve
      --max-connections=50
      --table-open-cache=1000
      --innodb-fast-shutdown=2
      --default-authentication-plugin=mysql_native_password
      --innodb-use-native-aio=0
    restart: always
    depends_on:
      - db

  # Primera instancia de la aplicación web (peso 3 - 50% del tráfico)
  web1:
    build: .
    environment:
      DATABASE_URL: mysql+pymysql://root:root@db:3306/inventario
    depends_on:
      - db
    restart: always

  # Segunda instancia de la aplicación web (peso 2 - 33% del tráfico)
  web2:
    build: .
    environment:
      DATABASE_URL: mysql+pymysql://root:root@db:3306/inventario
    depends_on:
      - db
    restart: always

  # Tercera instancia de la aplicación web (peso 1 - 17% del tráfico)
  web3:
    build: .
    environment:
      DATABASE_URL: mysql+pymysql://root:root@db:3306/inventario
    depends_on:
      - db
    restart: always

  # Balanceador de carga NGINX
  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - web1
      - web2
      - web3
    restart: always

  # phpMyAdmin para gestión de la base de datos
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    environment:
      PMA_ARBITRARY: 1
      PMA_HOSTS: db,db-slave
      PMA_VERBOSE_1: Master
      PMA_VERBOSE_2: Slave
      PMA_USER: root
      PMA_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8080:80"
    depends_on:
      - db
      - db-slave
    restart: always

volumes:
  db_data:
  db_slave_data: 